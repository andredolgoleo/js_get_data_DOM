{"version":3,"sources":["scripts/main.js"],"names":["populationArr","document","querySelectorAll","map","item","innerHTML","numbers","push","replace","totalPop","reduce","a","b","toLocaleString","averagePop","length","totalSpan","querySelector","averageSpan"],"mappings":";AAAA,aAkBA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhBA,IAgBA,EAhBMA,EAAgB,EAAIC,SAASC,iBAAiB,gBAAgBC,IAAI,SAAAC,GACtEA,OAAAA,EAAKC,YACDC,EAAU,GAEGN,EAAAA,EAAAA,GAYnB,IAZkC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAvBI,IAAAA,EAAuB,EAAA,MAChCE,EAAQC,MAAMH,EAAKI,QAAQ,WAAY,MAWzC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IARA,IAAMC,EAAWH,EAAQI,OAAO,SAACC,EAAGC,GAAMD,OAAAA,EAAIC,IAAGC,eAAe,SAC1DC,IAAeL,EAASD,QAAQ,WAAY,KAAOF,EAAQS,QAC9DF,eAAe,SAEZG,EAAYf,SAASgB,cAAc,qBACnCC,EAAcjB,SAASgB,cAAc,uBAE3CD,EAAUX,UAAYI,EACtBS,EAAYb,UAAYS","file":"main.4d8b9220.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst populationArr = [...document.querySelectorAll('.population')].map(item =>\n  item.innerHTML);\nconst numbers = [];\n\nfor (const item of populationArr) {\n  numbers.push(+item.replace(/[\\s.,%]/g, ''));\n}\n\nconst totalPop = numbers.reduce((a, b) => a + b).toLocaleString('en-US');\nconst averagePop = (+totalPop.replace(/[\\s.,%]/g, '') / +numbers.length)\n  .toLocaleString('en-US');\n\nconst totalSpan = document.querySelector('.total-population');\nconst averageSpan = document.querySelector('.average-population');\n\ntotalSpan.innerHTML = totalPop;\naverageSpan.innerHTML = averagePop;\n"]}